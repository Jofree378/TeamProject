"""
–û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–û–ë–©–ï–ù–ò–ô - –ë–ò–ó–ù–ï–°-–õ–û–ì–ò–ö–ê

–°—Ç—Ä—É–∫—Ç—É—Ä–∞:
- handle() - –≥–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –∫–æ–º–∞–Ω–¥
- _handle_* –º–µ—Ç–æ–¥—ã - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
- _show_* –º–µ—Ç–æ–¥—ã - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:
1. –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç core.py
2. –ë–µ—Ä–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î/VK —á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–µ—Ä—ã
3. –§–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

–ö–∞–∫ —Ä–∞—Å—à–∏—Ä—è—Ç—å:
1. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π _handle_–º–µ—Ç–æ–¥ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ handle()
"""

class MessageHandler:
    def __init__(self, bot):
        self.bot = bot
        self.user_states = {}  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞

    def handle(self, message):
        user_id = message['from_id']
        text = message['text'].lower()

        if text == '–Ω–∞—á–∞—Ç—å':
            self._handle_start(user_id)
        elif text == '–ø–æ–∏—Å–∫':
            self._handle_search(user_id)
        elif text == '–∏–∑–±—Ä–∞–Ω–Ω–æ–µ':
            self._handle_favorites(user_id)
        elif text == '–ø–æ–º–æ—â—å':
            self._handle_help(user_id)
        elif text == '–Ω–∞–∑–∞–¥':
            self._send_main_menu(user_id)
        elif text == '‚û°Ô∏è —Å–ª–µ–¥—É—é—â–∏–π':
            self._handle_next_match(user_id)
        elif text == '‚ù§Ô∏è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ':
            self._handle_add_to_favorites(user_id)
        elif self.user_states.get(user_id) == 'await_city':
            self._handle_city_input(user_id, text)
        elif self.user_states.get(user_id) == 'viewing_favorites':
            self._handle_favorite_selection(user_id, text)


    def _handle_start(self, user_id):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–Ω–∞—á–∞—Ç—å'"""
        profile = self.bot.vk_client.get_profile(user_id)
        if not profile.get('city'):
            self.user_states[user_id] = 'await_city'
            self.bot.vk.method('messages.send', {
                'user_id': user_id,
                'message': "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:",
                'keyboard': self.bot.keyboard.get_main_menu(),
                'random_id': 0
            })
        else:
            self.bot.db.initialize_user(user_id, profile)
            self._send_main_menu(user_id)

    def _handle_search(self, user_id):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–ø–æ–∏—Å–∫'"""
        criteria = self.bot.db.get_user(user_id)
        matches = self.bot.vk_client.search_users(**criteria)

        if matches:
            self.bot.db.cache_matches(user_id, matches)
            match = self.bot.db.next_match(user_id)
            self._show_match(user_id, match)
        else:
            self.bot.vk.method('messages.send', {
                'user_id': user_id,
                'message': "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Ç",
                'keyboard': self.bot.keyboard.get_main_menu(),
                'random_id': 0
            })

    def _show_match(self, user_id, match):
        """–ü–æ–∫–∞–∑ –∞–Ω–∫–µ—Ç—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–µ–π—Å—Ç–≤–∏–π"""
        photos = self.bot.vk_client.get_photos(match['id'])
        message = {
            'user_id': user_id,
            'message': f"{match['first_name']} {match['last_name']}\n"
                   f"–°—Å—ã–ª–∫–∞: vk.com/id{match['id']}",
            'attachment' : ','.join(photos),
            'keyboard': self.bot.keyboard.get_search_actions(),
            'random_id': 0
        }
        self.user_states[user_id] = match['pair_id']
        self.user_states['photos'] = ','.join(photos)

        self.bot.vk.method('messages.send', message)

    def _handle_next_match(self, user_id):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º—ç—Ç—á—É (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)"""
        prev_match = self.user_states.get(user_id)
        if prev_match:
            match = self.bot.db.next_match(user_id, prev_match)
            if match:
                self._show_match(user_id, match)
            else:
                self.bot.vk.method('messages.send', {
                    'user_id': user_id,
                    'message': "–ê–Ω–∫–µ—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å —Å–Ω–æ–≤–∞",
                    'keyboard': self.bot.keyboard.get_main_menu(),
                    'random_id': 0
                })
        else:
            self._handle_search(user_id)


    def _handle_add_to_favorites(self, user_id):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"""
        pair_id = self.user_states[user_id]
        self.bot.db.add_to_favorites(pair_id=pair_id,
                                     photos=self.user_states['photos'])

        match = self.bot.db.next_match(user_id, pair_id)
        self._show_match(user_id, match)



    def _handle_favorites(self, user_id):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —Å –ø–æ–∫–∞–∑–æ–º —Å–ø–∏—Å–∫–∞"""
        favorites = self.bot.db.get_favorites(user_id)
        if not favorites:
            self.bot.vk.method('messages.send', {
                'user_id': user_id,
                'message': "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç",
                'keyboard': self.bot.keyboard.get_main_menu(),
                'random_id': 0
            })
            return

        self._show_favorites_list(user_id, favorites)
        self.user_states[user_id] = 'viewing_favorites'

    def _show_favorite_profile(self, user_id, favorite):
        """–ü–æ–∫–∞–∑ –∞–Ω–∫–µ—Ç—ã –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"""
        photos = self.bot.db.get_photos_to_favorites(favorite['pair_id'])
        
        self.bot.vk.method('messages.send', {
            'user_id' : user_id,
            'message' : f"‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ:\n{favorite['first_name']} {favorite['last_name']}\n"
                        f"–°—Å—ã–ª–∫–∞: vk.com/id{favorite['match_id']}",
            'attachment' : ','.join(photos),
            'keyboard' : self.bot.keyboard.get_favorites_actions(),
            'random_id' : 0
        })

    def _handle_city_input(self, user_id, city):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞"""
        if city.lower() == '–æ—Ç–º–µ–Ω–∞':
            self._send_main_menu(user_id)
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        profile = self.bot.vk_client.get_profile(user_id)
        profile['city'] = city
        self.bot.db.initialize_user(user_id, profile)
        
        self._send_main_menu(user_id, f"–ì–æ—Ä–æ–¥ {city} —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")

    def _send_main_menu(self, user_id, additional_message=""):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        message = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        if additional_message:
            message = f"{additional_message}\n\n{message}"

        self.bot.vk.method('messages.send', {
            'user_id' : user_id,
            'message' : message,
            'keyboard' : self.bot.keyboard.get_main_menu(),
            'random_id' : 0
        })

    def _show_favorites_list(self, user_id, favorites):
        """–ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–Ω–æ–≤—ã–π –º–µ—Ç–æ–¥)"""
        message = "‚ù§Ô∏è –í–∞—à–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:\n\n"
        for i, favorite in enumerate(favorites, 1):
            message += f"{i}. {favorite['first_name']} {favorite['last_name']}\n"
            message += f"–°—Å—ã–ª–∫–∞: vk.com/id{favorite['match_id']}\n\n"
        
        self.bot.vk.method('messages.send', {
            'user_id': user_id,
            'message': message,
            'keyboard': self.bot.keyboard.get_favorites_list_keyboard(),
            'random_id': 0
        })

    def _handle_favorite_selection(self, user_id, text):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–Ω–æ–≤—ã–π –º–µ—Ç–æ–¥)"""
        try:
            fav_num = int(text)
            favorites = self.bot.db.get_favorites(user_id)
            if 1 <= fav_num <= len(favorites):
                self._show_favorite_profile(user_id, favorites[fav_num-1])
            else:
                self.bot.vk.method('messages.send', {
                    'user_id': user_id,
                    'message': "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∞–Ω–∫–µ—Ç—ã",
                    'keyboard': self.bot.keyboard.get_favorites_list_keyboard(),
                    'random_id': 0
                })
        except ValueError:
            self.bot.vk.method('messages.send', {
                'user_id': user_id,
                'message': "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–Ω–∫–µ—Ç—ã",
                'keyboard': self.bot.keyboard.get_favorites_list_keyboard(),
                'random_id': 0
            })

    def _handle_help(self, user_id):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–º–æ—â–∏"""
        help_text = (
            "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "‚Ä¢ –ü–æ–∏—Å–∫ - –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ –∞–Ω–∫–µ—Ç—ã\n"
            "‚Ä¢ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã\n"
            "‚Ä¢ –ù–∞–∑–∞–¥ - –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "‚Ä¢ –ü–æ–º–æ—â—å - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
            "–ü—Ä–∏ –ø–æ–∏—Å–∫–µ:\n"
            "‚ù§Ô∏è - –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ\n"
            "‚û°Ô∏è - —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å\n\n"
            "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º:\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–Ω–∫–µ—Ç—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        )
        self.bot.vk.method('messages.send', {
            'user_id': user_id,
            'message': help_text,
            'keyboard': self.bot.keyboard.get_main_menu(),
            'random_id': 0
        })